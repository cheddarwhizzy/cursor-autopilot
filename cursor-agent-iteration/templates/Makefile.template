# Makefile for Cursor Agent Iteration System

.PHONY: help iterate-init iterate iterate-complete iterate-loop add-feature archive-completed task-status

## help: Show this help message
help:
	@echo "Cursor Agent Iteration System"
	@echo ""
	@echo "Available targets:"
	@grep -E '^## ' $(MAKEFILE_LIST) | sed 's/## /  /'
	@echo ""
	@echo "Examples:"
	@echo "  make iterate-init    # Initialize the iteration system"
	@echo "  make iterate         # Run the next task"
	@echo "  make iterate-loop    # Run iterations until all tasks complete"
	@echo "  make add-feature     # Add new feature/requirements"
	@echo "  make archive-completed # Archive completed tasks"
	@echo "  make iterate-complete # Check if all tasks are completed"
	@echo "  make task-status      # Show current task status and progress"

## iterate-init: Initialize universal iteration system
iterate-init:
	@echo "Initializing universal iteration system..."
	@./scripts/init-iterate.sh
	@echo "Iteration system ready! Run 'make iterate' to start the engineering loop."

## iterate: Run the self-managing engineering iteration loop
iterate:
	@echo "Starting engineering iteration loop..."
	cursor-agent --print --force "Please execute the engineering iteration loop as defined in prompts/iterate.md. Read the control files (architecture.md, tasks.md, progress.md, decisions.md, test_plan.md, qa_checklist.md, CHANGELOG.md) and select the first unchecked task from tasks.md. Then implement, test, validate, document, and commit the changes following the quality gates specified in the iteration prompt."
	@echo "Iteration complete! Check progress.md for details."


## iterate-complete: Check if all tasks are completed
iterate-complete:
	@echo "Checking completion status..."
	@./scripts/check-complete.sh

## iterate-loop: Run iterations until all tasks are completed
iterate-loop:
	@echo "Starting continuous iteration loop..."
	@echo "Press Ctrl+C to stop at any time"
	@./scripts/iterate-loop.sh

## add-feature: Add new feature/requirements to the project
add-feature:
	@echo "Adding new feature/requirements..."
	@./scripts/add-feature.sh

## archive-completed: Move completed tasks to archive
archive-completed:
	@echo "Archiving completed tasks..."
	@./scripts/archive-completed.sh

## task-status: Show current task status and progress
task-status:
	@echo "📊 Task Status Overview"
	@echo "======================"
	@if [ -f "tasks.md" ]; then \
		echo ""; \
		echo "📋 Current Tasks:"; \
		echo "----------------"; \
		echo "✅ Completed tasks:"; \
		grep -c "^- \[x\]" tasks.md 2>/dev/null || echo "   0"; \
		echo "🔄 In-progress tasks:"; \
		(grep -c "^- \[ \].*🔄\|^- \[ \].*in progress\|^- \[ \].*working" tasks.md 2>/dev/null || echo "0") | sed 's/^/   /'; \
		echo "⏳ Pending tasks:"; \
		grep -c "^- \[ \]" tasks.md 2>/dev/null || echo "   0"; \
		echo ""; \
		echo "📝 Task Details:"; \
		echo "---------------"; \
		grep "^# " tasks.md | head -5 || echo "   No tasks found"; \
		echo ""; \
		if grep -q "^- \[ \].*🔄\|^- \[ \].*in progress\|^- \[ \].*working" tasks.md; then \
			echo "🎯 Currently Working On:"; \
			grep -A 2 "^- \[ \].*🔄\|^- \[ \].*in progress\|^- \[ \].*working" tasks.md | head -3; \
			echo ""; \
		fi; \
		if grep -q "^- \[ \]" tasks.md; then \
			echo "📋 Next Pending Task:"; \
			grep -A 2 "^- \[ \]" tasks.md | head -3; \
		else \
			echo "🎉 All tasks completed!"; \
		fi; \
		echo ""; \
		echo "💡 Tip: Run 'make iterate' for next task or 'make iterate-loop' for continuous processing"; \
	else \
		echo "❌ No tasks.md found. Run 'make iterate-init' first."; \
	fi
