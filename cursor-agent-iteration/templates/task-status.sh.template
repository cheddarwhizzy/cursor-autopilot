#!/usr/bin/env bash
set -euo pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

resolve_tasks_file() {
  if [[ -n "${TASKS_FILE:-}" ]]; then echo "$TASKS_FILE"; return 0; fi
  if [[ -f "tasks.md" ]]; then echo "tasks.md"; return 0; fi
  if [[ -f "../tasks.md" ]]; then echo "../tasks.md"; return 0; fi
  return 1
}

if ! TASKS_FILE_RESOLVED=$(resolve_tasks_file); then
  echo -e "${RED}‚ùå tasks.md not found in current or parent directory${NC}"
  echo -e "${YELLOW}Tip:${NC} Run inside the repo with tasks.md, or set TASKS_FILE"
  exit 1
fi

# Prefer standardized header markers if present; fallback to checklist
TOTAL_TASKS=$(awk '/^### Task:/{c++} END{print c+0}' "$TASKS_FILE_RESOLVED")
if [[ "$TOTAL_TASKS" -gt 0 ]]; then
  COMPLETED_TASKS=$(awk '/^### Task: .*‚úÖ/{c++} END{print c+0}' "$TASKS_FILE_RESOLVED")
  IN_PROGRESS_TASKS=$(awk '/^### Task: .*üîÑ/{c++} END{print c+0}' "$TASKS_FILE_RESOLVED")
  PENDING_TASKS=$((TOTAL_TASKS - COMPLETED_TASKS - IN_PROGRESS_TASKS))
else
  TOTAL_TASKS=$(awk '/^[*-] \[/{c++} END{print c+0}' "$TASKS_FILE_RESOLVED")
  COMPLETED_TASKS=$(awk '/^[*-] \[x\]/{c++} END{print c+0}' "$TASKS_FILE_RESOLVED")
  IN_PROGRESS_TASKS=$(awk '/^[*-] \[( |~)\].*üîÑ/{c++} END{print c+0}' "$TASKS_FILE_RESOLVED")
  PENDING_TASKS=$((TOTAL_TASKS - COMPLETED_TASKS - IN_PROGRESS_TASKS))
fi

echo -e "${CYAN}üìä Task Status Overview${NC}"
echo "======================"
echo ""
echo -e "${BLUE}üìã Current Tasks:${NC}"
echo "----------------"
echo -e "${GREEN}‚úÖ Completed tasks:${NC}"
echo "  $COMPLETED_TASKS"
grep -n -E '^### Task: .*‚úÖ' "$TASKS_FILE_RESOLVED" | sed 's/^/   /' || true
grep -n -E '^[*-] \[x\]' "$TASKS_FILE_RESOLVED" | sed 's/^/   /' || true
echo -e "${YELLOW}üîÑ In-progress tasks:${NC}"
echo "  $IN_PROGRESS_TASKS"
grep -n -E '^### Task: .*üîÑ' "$TASKS_FILE_RESOLVED" | sed 's/^/   /' || true
grep -n -E '^[*-] \[( |~)\].*üîÑ' "$TASKS_FILE_RESOLVED" | sed 's/^/   /' || true
echo -e "${CYAN}‚è≥ Pending tasks:${NC}"
echo "  $PENDING_TASKS"
# Pending by excluding headers that contain ‚úÖ or üîÑ (no lookahead to support BSD grep)
grep -n -E '^### Task:' "$TASKS_FILE_RESOLVED" | grep -v '‚úÖ' | grep -v 'üîÑ' | sed 's/^/   /' || true
grep -n -E '^[*-] \[ \]( |$)' "$TASKS_FILE_RESOLVED" | grep -v 'üîÑ' | sed 's/^/   /' || true

echo ""
echo -e "${BLUE}üìù Task Details:${NC}"
echo "---------------"
echo "# Using tasks from"
echo "  $TASKS_FILE_RESOLVED"

exit 0


